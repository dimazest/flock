[buildout]
#index = http://pypi.upc.edu/mirror/

extends =
    versions.cfg
    secrets.cfg

extensions = mr.developer
sources = sources
auto-checkout =
    produce
    poultry
    sqlalchemy-crosstab-postgresql
    paginate_sqlalchemy
    ark-twokenize-py

develop =
    .
    flock-conf
    flock-web
    gundog

show-picked-versions = true
versions = versions
parts =
    sysegg
    environment
    poultry
    flock
    flock-web
    gundog
    twarc
    circus
    flock_config
    poultry_config
    poultry_config_qm
    poultry_config-lv2-riga
    poultry_config-lv2-list
    poultry_config-lv3
    circus_config
    flock-web_config
    flock-web-dev_config
    mkdir
    pg_activity
    redis
    redis_build

[sysegg]
recipe = syseggrecipe
eggs =
    psycopg2
    pyzmq
    psutil
    gensim
    numpy
    scikit-learn
    scipy
    cython
    pandas

[environment]
recipe = collective.recipe.environment

[sources]
poultry = git git@github.com:dimazest/poultry.git branch=development
produce = git https://github.com/texttheater/produce.git egg=false
sqlalchemy-views = git https://github.com/jklukas/sqlalchemy-views.git
sqlalchemy-crosstab-postgresql = git git@github.com:dimazest/sqlalchemy-crosstab-postgresql.git
paginate_sqlalchemy = git git@github.com:dimazest/paginate_sqlalchemy.git
ark-tweet-nlp = git git@github.com:brendano/ark-tweet-nlp.git egg=false
ark-twokenize-py = git git@github.com:dimazest/ark-twokenize-py.git

[poultry]
recipe = zc.recipe.egg
eggs =
      poultry
      pytest
scripts =
        poultry
        pytest=pytest-poultry
[gundog]
recipe = zc.recipe.egg:scripts
eggs =
     gundog
     pytest
scripts =
        pytest=pytest-gundog
        gundog

[flock]
recipe = zc.recipe.egg
eggs =
    flock
    alembic
    psycopg2
    ipdb

    nose
    rednose
    nose-timer
    coverage

    flock-conf
    poultry
    simhash
interpreter = python

[flock-web]
recipe = zc.recipe.egg
eggs =
    flock-web
    chaussette
    celery
    redis
    flower
interpreter = py-flock-web

[twarc]
recipe = zc.recipe.egg

[notebook]
recipe = zc.recipe.egg
eggs =
    notebook
    jupyter
    poultry
    ipython
scripts = jupyter-notebook

[circus]
recipe = zc.recipe.egg

[flock_config]
recipe = flock-conf
clusters_conf = clusters/lv.cfg

[flock_config-lv3]
recipe = flock-conf
clusters_conf = clusters/lv3.cfg

[poultry_config]
recipe = collective.recipe.template[genshi]:genshi
input = cfg/poultry.cfg
output = ${buildout:parts-directory}/etc/poultry.cfg

follow = ${flock_config:all_user_ids}

access_token = ${secret_lv2:ACCESS_TOKEN}
access_token_secret = ${secret_lv2:ACCESS_TOKEN_SECRET}
consumer_key = ${secret_lv2:CONSUMER_KEY}
consumer_secret = ${secret_lv2:CONSUMER_SECRET}

[poultry_config-lv2-riga]
recipe = collective.recipe.template[genshi]:genshi
input = cfg/poultry-lv2-riga.cfg
output = ${buildout:parts-directory}/etc/poultry-lv2-riga.cfg

access_token = ${secret_lv2-riga:ACCESS_TOKEN}
access_token_secret = ${secret_lv2-riga:ACCESS_TOKEN_SECRET}
consumer_key = ${secret_lv2-riga:CONSUMER_KEY}
consumer_secret = ${secret_lv2-riga:CONSUMER_SECRET}

[poultry_config-lv2-list]
recipe = collective.recipe.template[genshi]:genshi
input = cfg/poultry-lv2-list.cfg
output = ${buildout:parts-directory}/etc/poultry-lv2-list.cfg

access_token = ${secret_lv2-list:ACCESS_TOKEN}
access_token_secret = ${secret_lv2-list:ACCESS_TOKEN_SECRET}
consumer_key = ${secret_lv2-list:CONSUMER_KEY}
consumer_secret = ${secret_lv2-list:CONSUMER_SECRET}

follow = ${flock_config:all_user_ids}

[poultry_config-lv3]
recipe = collective.recipe.template[genshi]:genshi
input = cfg/poultry-lv3.cfg
output = ${buildout:parts-directory}/etc/poultry-lv3.cfg

access_token = ${secret_lv3:ACCESS_TOKEN}
access_token_secret = ${secret_lv3:ACCESS_TOKEN_SECRET}
consumer_key = ${secret_lv3:CONSUMER_KEY}
consumer_secret = ${secret_lv3:CONSUMER_SECRET}

follow = ${flock_config-lv3:all_user_ids}

[poultry_config_qm]
recipe = collective.recipe.template[genshi]:genshi
input = cfg/poultry-qm.cfg
output = ${buildout:parts-directory}/etc/poultry-qm.cfg

access_token = ${secret_qm:ACCESS_TOKEN}
access_token_secret = ${secret_qm:ACCESS_TOKEN_SECRET}
consumer_key = ${secret_qm:CONSUMER_KEY}
consumer_secret = ${secret_qm:CONSUMER_SECRET}

[circus_config]
recipe = collective.recipe.template[genshi]:genshi
input = cfg/circus.ini
output = ${buildout:parts-directory}/etc/circus.ini

poultry_cfg = ${poultry_config:output}
poultry_cfg_qm = ${poultry_config_qm:output}
poultry_cfg_lv2-riga = ${poultry_config-lv2-riga:output}
poultry_cfg_lv2-list = ${poultry_config-lv2-list:output}
poultry_cfg_lv3 = ${poultry_config-lv3:output}

[flock-web_config]
recipe = collective.recipe.template[genshi]:genshi
input = cfg/flock-web.cfg
output = ${buildout:parts-directory}/etc/flock-web.cfg

access_token = ${environment:ACCESS_TOKEN}
access_token_secret = ${environment:ACCESS_TOKEN_SECRET}
consumer_key = ${environment:CONSUMER_KEY}
consumer_secret = ${environment:CONSUMER_SECRET}

DEBUG = 0
SECRET_KEY = ${flock_config:SECRET_KEY}

[flock-web-dev_config]
recipe = collective.recipe.template[genshi]:genshi
input = cfg/flock-web.cfg
output = ${buildout:parts-directory}/etc/flock-web-dev.cfg

access_token = ${environment:ACCESS_TOKEN}
access_token_secret = ${environment:ACCESS_TOKEN_SECRET}
consumer_key = ${environment:CONSUMER_KEY}
consumer_secret = ${environment:CONSUMER_SECRET}

DEBUG = 1
SECRET_KEY = __DEBUG__

[mkdir]
recipe = z3c.recipe.mkdir
paths =
    tweets/db
    tweets/hydrate

    parts/cache

[pg_activity]
recipe = zc.recipe.egg

[redis]
recipe = hexagonit.recipe.download
strip-top-level-dir = true
url = http://download.redis.io/releases/redis-3.2.8.tar.gz

[redis_build]
recipe = collective.recipe.cmd
cmds = cd ${redis:location} && make
on_install = true
on_update = true
